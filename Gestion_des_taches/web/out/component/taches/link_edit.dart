// Auto-generated from link_edit.html.
// DO NOT EDIT.

library x_link_edit;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'dart:html';
import 'dart:uri';
import 'package:Gestion_des_taches/dartlero_categorie_taches.dart';
import 'package:web_ui/web_ui.dart';



class LinkEdit extends WebComponent {
  /** Autogenerated from the template. */

  /** CSS class constants. */
  static Map<String, String> _css = {};

  /**
   * Shadow root for this component. We use 'var' to allow simulating shadow DOM
   * on browsers that don't support this feature.
   */
  var _root;
  autogenerated.ButtonElement __e41;
  autogenerated.InputElement __e40, __editLinkDescription, __editLinkUrl;
  autogenerated.SpanElement __e39, __editLinkMessage;
  autogenerated.Template __t;

  LinkEdit.forElement(e) : super.forElement(e);

  void created_autogenerated() {
    _root = createShadowRoot();
    __t = new autogenerated.Template(_root);
    _root.innerHtml = '''
        <div>
          <br>
          <span class="marker" id="__e-39"></span>
          <br>
          <label>Name</label>
          <input readonly="true" id="__e-40">
          <br>
          <label for="edit-link-url">Web Link</label>
          <input id="edit-link-url" type="text" size="96">
          <br>
          <label for="edit-link-description">Description</label>
          <input id="edit-link-description" type="text" size="96">
          <br>
          <button id="__e-41">Update</button>
          <span id="edit-link-message"></span>
        </div>
      ''';
    __e39 = _root.query('#__e-39');
    var __binding38 = __t.contentBind(() =>  category.code , false);
    __e39.nodes.addAll([new autogenerated.Text('Link of '),
        __binding38,
        new autogenerated.Text(' category')]);
    __e40 = _root.query('#__e-40');
    __t.oneWayBind(() =>  link.code , (e) { __e40.value = e; }, false, false);
    __editLinkUrl = _root.query('#edit-link-url');
    __t.oneWayBind(() =>  link.url.toString() , (e) { __editLinkUrl.value = e; }, false, false);
    __editLinkDescription = _root.query('#edit-link-description');
    __t.oneWayBind(() =>  link.description , (e) { __editLinkDescription.value = e; }, false, false);
    __e41 = _root.query('#__e-41');
    __t.listen(__e41.onClick, ($event) { update(); });
    __editLinkMessage = _root.query('#edit-link-message');
    __t.create();
  }

  void inserted_autogenerated() {
    __t.insert();
  }

  void removed_autogenerated() {
    __t.remove();
    __t = __e39 = __e40 = __editLinkUrl = __editLinkDescription = __e41 = __editLinkMessage = null;
  }

  void composeChildren() {
    super.composeChildren();
    if (_root is! autogenerated.ShadowRoot) _root = this;
  }

  /** Original code from the component. */

  Category category;
  Links links;
  Link link;

  update() {
    InputElement webLink = query("#edit-link-url");
    InputElement description = query("#edit-link-description");
    Element message = query("#edit-link-message");
    var error = false;
    message.text = '';
    if (webLink.value.trim() == '') {
      message.text = 'web link is mandatory; ${message.text}';
      error = true;
    }
    if (!error) {
      link.url = new Uri.fromString(webLink.value);
      link.description = description.value;
      var linkTable = document.query('x-link-table').xtag;
      linkTable.showLinkEdit = false;
    }
  }

}


//@ sourceMappingURL=link_edit.dart.map